AWSTemplateFormatVersion: 2010-09-09
Description: Multi-environment CICD team repos resources in shared DevOps account

Parameters:
  pArtifactsBucket:
    Description: The artifacts bucket used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/DevOpsArtifactsBucket
  pKMSKey:
    Description: The KMS key used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/KMS/CICDKeyId
  pCicdRepository:
    Type: String
    Default: sdlf-cicd
  pFoundationsRepository:
    Type: String
    Default: sdlf-foundations
  pTeamRepository:
    Type: String
    Default: sdlf-team
  pPipelineRepository:
    Type: String
    Default: sdlf-pipeline
  pDatasetRepository:
    Type: String
    Default: sdlf-dataset
  pStageARepository:
    Type: String
    Default: sdlf-stageA
  pStageBRepository:
    Type: String
    Default: sdlf-stageB
  pDatalakeLibraryRepository:
    Type: String
    Default: sdlf-datalakeLibrary
  pUtilsRepository:
    Type: String
    Default: sdlf-utils
  pMainRepository:
    Type: String
    Default: sdlf-main
  pStagesRepositoriesPrefix:
    Type: String
    Default: sdlf-stage-
  pDatalakeLibsLambdaLayerName:
    Description: Name to give the Lambda Layer containing the Datalake Library.
    Type: String
    Default: DatalakeLibrary
    AllowedPattern: "^[a-zA-Z0-9]*$"
  pEnableLambdaLayerBuilder:
    Description: Add Lambda layer builder infrastructure and pipeline stages
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/LambdaLayerBuilder/Enabled
  pEnableGlueJobDeployer:
    Description: Add Glue job deployer infrastructure and pipeline stages
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/GlueJobDeployer/Enabled

Conditions:
  EnableLambdaLayerBuilder: !Equals [!Ref pEnableLambdaLayerBuilder, true]
  EnableGlueJobDeployer: !Equals [!Ref pEnableGlueJobDeployer, true]

Resources:
  ######## CODECOMMIT #########
  rCicdCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-cicd
      RepositoryDescription: sdlf-cicd repository
      RepositoryName: !Ref pCicdRepository

  rFoundationsCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-foundations
      RepositoryDescription: sdlf-foundations repository
      RepositoryName: !Ref pFoundationsRepository

  rTeamCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-team
      RepositoryDescription: sdlf-team repository
      RepositoryName: !Ref pTeamRepository

  rPipelineCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-pipeline
      RepositoryDescription: sdlf-pipeline repository
      RepositoryName: !Ref pPipelineRepository

  rDatasetCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-dataset
      RepositoryDescription: sdlf-dataset repository
      RepositoryName: !Ref pDatasetRepository

  rStageACodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-stageA
      RepositoryDescription: sdlf-stageA repository
      RepositoryName: !Ref pStageARepository

  rStageBCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-stageB
      RepositoryDescription: sdlf-stageB repository
      RepositoryName: !Ref pStageBRepository

  rDatalakeLibraryCodeCommit:
    Type: AWS::CodeCommit::Repository
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
    Properties:
      Code:
        BranchName: main
        S3: ../sdlf-datalakeLibrary
      RepositoryDescription: sdlf-datalakeLibrary repository
      RepositoryName: !Ref pDatalakeLibraryRepository

  rMainCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
      # Code:
      #   BranchName: main
      #   S3: ../sdlf-main
      RepositoryDescription: sdlf-main repository
      RepositoryName: !Ref pMainRepository

  rCicdCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/CicdCodeCommit
      Type: String
      Value: !GetAtt rCicdCodeCommit.Name
      Description: Name of the Cicd repository

  rFoundationsCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/FoundationsCodeCommit
      Type: String
      Value: !GetAtt rFoundationsCodeCommit.Name
      Description: Name of the Foundations repository

  rTeamCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/TeamCodeCommit
      Type: String
      Value: !GetAtt rTeamCodeCommit.Name
      Description: Name of the Team repository

  rPipelineCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/PipelineCodeCommit
      Type: String
      Value: !GetAtt rPipelineCodeCommit.Name
      Description: Name of the Pipeline repository

  rDatasetCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/DatasetCodeCommit
      Type: String
      Value: !GetAtt rDatasetCodeCommit.Name
      Description: Name of the Dataset repository

  rStageACodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/StageACodeCommit
      Type: String
      Value: !GetAtt rStageACodeCommit.Name
      Description: Name of the StageA repository

  rStageBCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/StageBCodeCommit
      Type: String
      Value: !GetAtt rStageBCodeCommit.Name
      Description: Name of the StageB repository

  rDatalakeLibraryCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/DatalakeLibraryCodeCommit
      Type: String
      Value: !GetAtt rDatalakeLibraryCodeCommit.Name
      Description: Name of the DatalakeLibrary repository

  rUtilsCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/UtilsCodeCommit
      Type: String
      Value: !Ref pUtilsRepository
      Description: Name of the Utils repository

  rMainCodeCommitSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeCommit/MainCodeCommit
      Type: String
      Value: !GetAtt rMainCodeCommit.Name
      Description: Name of the main repository

  rCloudFormationModuleInfrastructure:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-cfn-module.yaml

  rCloudFormationModulesDevDeploymentPipelines:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rCloudFormationModuleInfrastructure
      - rBuildDeployDatalakeLibraryLayerSsm
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-modules-pipelines.yaml
      Parameters:
        pCicdRepository: !GetAtt rCicdCodeCommit.Name
        pMainRepository: !GetAtt rMainCodeCommit.Name
        pMainRepositoryDomainLambda: !Ref rMainRepositoryDomainLambda
        pMainRepositoryCrossAccountTeamLambda: !Ref rMainRepositoryCrossAccountTeamLambda
        pMainRepositoryTeamLambda: !Ref rMainRepositoryTeamLambda
        pEnvironment: dev

  rCloudFormationModulesTestDeploymentPipelines:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rCloudFormationModuleInfrastructure
      - rBuildDeployDatalakeLibraryLayerSsm
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-modules-pipelines.yaml
      Parameters:
        pCicdRepository: !GetAtt rCicdCodeCommit.Name
        pMainRepository: !GetAtt rMainCodeCommit.Name
        pMainRepositoryDomainLambda: !Ref rMainRepositoryDomainLambda
        pMainRepositoryCrossAccountTeamLambda: !Ref rMainRepositoryCrossAccountTeamLambda
        pMainRepositoryTeamLambda: !Ref rMainRepositoryTeamLambda
        pEnvironment: test

  rCloudFormationModulesProdDeploymentPipelines:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - rCloudFormationModuleInfrastructure
      - rBuildDeployDatalakeLibraryLayerSsm
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-modules-pipelines.yaml
      Parameters:
        pCicdRepository: !GetAtt rCicdCodeCommit.Name
        pMainRepository: !GetAtt rMainCodeCommit.Name
        pMainRepositoryDomainLambda: !Ref rMainRepositoryDomainLambda
        pMainRepositoryCrossAccountTeamLambda: !Ref rMainRepositoryCrossAccountTeamLambda
        pMainRepositoryTeamLambda: !Ref rMainRepositoryTeamLambda
        pEnvironment: prod

  rStagesRepositoriesLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The actions with "*" are all ones that only support the all resources wildcard
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: LogAccessPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-cicd-*
        - PolicyName: sdlf-cicd-stagesrepositories
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:PutJobSuccessResult # W11 exception
                  - codepipeline:PutJobFailureResult # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:ListRepositories # W11 exception
                Resource: "*"

  rStagesRepositoriesCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/LanguageExtensions
        - PolicyName: sdlf-cicd-stagesrepositories
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/S3/DevOpsArtifactsBucket
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/CICDKeyId
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CodeBuild/BuildCloudformationModuleStage
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipelineState
                  - codepipeline:GetPipeline
                  - codepipeline:CreatePipeline
                  - codepipeline:DeletePipeline
                  - codepipeline:UpdatePipeline
                  - codepipeline:TagResource
                  - codepipeline:UntagResource
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:sdlf-cicd-stages-repositories-*
              - Effect: Allow
                Action:
                  - events:DescribeRule
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:TagResource
                  - events:UntagResource
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-cicd-stages-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-stages-*
                Condition:
                  StringEquals:
                    iam:PassedToService:
                      - codepipeline.amazonaws.com
                      - events.amazonaws.com

  rStagesRepositoriesLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: !Sub Lists CodeCommit repositories starting with ${pStagesRepositoriesPrefix}
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt rStagesRepositoriesLambdaRole.Arn
      Runtime: python3.11
      Timeout: 300
      Environment:
        Variables:
          STAGES_REPOSITORIES_PREFIX: !Ref pStagesRepositoriesPrefix
      Code: ./lambda/stagesrepositories-cicd/src

  ######## LAMBDA #########
  rMainRepositoryLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The actions with "*" are all ones that only support the all resources wildcard
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: LogAccessPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-cicd-*
              - Effect: Allow
                Action:
                  - codepipeline:PutJobSuccessResult # W11 exception
                  - codepipeline:PutJobFailureResult # W11 exception
                Resource: "*"
              - Action:
                  - codecommit:BatchGetCommits
                  - codecommit:BatchGetCommits
                  - codecommit:GetCommit
                  - codecommit:GetCommitHistory
                  - codecommit:GetDifferences
                  - codecommit:GetObjectIdentifier
                  - codecommit:GetReferences
                  - codecommit:GetTree
                  - codecommit:GetFile
                  - codecommit:GetFolder
                  - codecommit:AssociateApprovalRuleTemplateWithRepository
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pMainRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pCicdRepository}
                Sid: CodeCommitRead
              - Action:
                  - codecommit:CreateApprovalRuleTemplate # W11 exception
                Effect: Allow
                Resource:
                  - "*"
              - Sid: AllowSSMGet
                Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Misc/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/template-cicd-sdlf-repositories/*
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/sdlf-cicd-sdlf-repos/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource: !Ref pKMSKey
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-cicd-*
              - Effect: Allow
                Action:
                  - cloudformation:ListStacks # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt rMainRepositoryCloudFormationRole.Arn
                Condition:
                  StringEquals:
                    "iam:PassedToService": cloudformation.amazonaws.com
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-team-crossaccount-pipeline
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:RevokeGrant
                  - kms:ListGrants
                Resource: !Ref pKMSKey

  rMainRepositoryCloudFormationRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The actions with "*" are all ones that only support the all resources wildcard
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:ListRepositories # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:CreateRepository
                  - codecommit:DeleteRepository
                  - codecommit:TagResource
                  - codecommit:UntagResource
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:sdlf-main-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-team-crossaccount-pipeline
                Condition:
                  StringEquals:
                    "iam:PassedToService": codepipeline.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-domain-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-teams-*
                Condition:
                  StringEquals:
                    "iam:PassedToService":
                      - codepipeline.amazonaws.com
                      - events.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-domain-crossaccount-pipeline
                Condition:
                  StringEquals:
                    "iam:PassedToService": codepipeline.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-team-*
                  - !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-domain
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListRolePolicies
                  - iam:PutRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-domain-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-teams-*
              - Effect: "Allow"
                Action:
                  - events:DescribeRule
                  - events:DeleteRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-cicd-domain-*
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-cicd-teams-*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Misc/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/S3/DevOpsArtifactsBucket
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/CICDKeyId
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CodePipeline/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CodeBuild/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/LambdaLayerBuilder/Enabled
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/GlueJobDeployer/Enabled
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/CodeCommit/*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipelineState
                  - codepipeline:GetPipeline
                  - codepipeline:CreatePipeline
                  - codepipeline:DeletePipeline
                  - codepipeline:UpdatePipeline
                  - codepipeline:TagResource
                  - codepipeline:UntagResource
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:sdlf-cicd-domain-*
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:sdlf-cicd-teams-*

  rMainRepositoryDomainLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Creates a CodePipeline pipeline for each domain-env defined in the main datalake repository
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Role: !GetAtt rMainRepositoryLambdaRole.Arn
      Runtime: python3.11
      Timeout: 450
      Environment:
        Variables:
          CLOUDFORMATION_ROLE: !GetAtt rMainRepositoryCloudFormationRole.Arn
      Code: ./lambda/domain-cicd/src

  rMainRepositoryCrossAccountTeamLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Creates a cross-account role for each team in each domain-env defined in the main datalake repository
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Role: !GetAtt rMainRepositoryLambdaRole.Arn
      Runtime: python3.11
      Timeout: 450
      Environment:
        Variables:
          AWS_PARTITION: !Ref AWS::Partition
          DEVOPS_KMS_KEY: !Ref pKMSKey
          ENABLE_LAMBDA_LAYER_BUILDER: !Ref pEnableLambdaLayerBuilder
          ENABLE_GLUE_JOB_DEPLOYER: !Ref pEnableGlueJobDeployer
      Code: ./lambda/crossaccountteam-cicd/src

  rMainRepositoryTeamLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Creates a CodePipeline pipeline for each team in each domain-env defined in the main datalake repository
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Role: !GetAtt rMainRepositoryLambdaRole.Arn
      Runtime: python3.11
      Timeout: 450
      Environment:
        Variables:
          AWS_PARTITION: !Ref AWS::Partition
          DEVOPS_KMS_KEY: !Ref pKMSKey
          CLOUDFORMATION_ROLE: !GetAtt rMainRepositoryCloudFormationRole.Arn
      Code: ./lambda/team-cicd/src

  ######## CODEBUILD JOBS #########
  rCloudFormationPackageCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-codebuild
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sdlf-*
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource:
                  - !Ref pKMSKey
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-team-crossaccount-cloudformation-package

  rCloudFormationPackageCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: sdlf-cicd-cloudformation-package
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !Ref pKMSKey
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Type: PLAINTEXT
            Value: !Ref pArtifactsBucket
          - Name: TEMPLATE
            Type: PLAINTEXT
            Value: template.yaml
      ServiceRole: !GetAtt rCloudFormationPackageCodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - |-
                    aws --version # version 1 installed using pip by codebuild
                    pip3 uninstall -y awscli
                    aws --version # version 2
            build:
              commands:
                - aws cloudformation package --template "$TEMPLATE" --s3-bucket "$ARTIFACTS_BUCKET" --s3-prefix codebuild --output-template-file packaged-template.yaml
          artifacts:
            files:
              - packaged-template.yaml

  rLambdaLayersCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-codebuild
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sdlf-*
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource:
                  - !Ref pKMSKey
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/sdlf-cicd-domain-crossaccount-cfn-modules

  rBuildDeployDatalakeLibraryLayer:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Name: !Sub sdlf-cicd-${pDatalakeLibsLambdaLayerName}
      Description: Creates a Lambda Layer with the repository provided
      EncryptionKey: !Ref pKMSKey
      Environment:
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Type: PLAINTEXT
            Value: !Ref pArtifactsBucket
          - Name: LAYER_NAME
            Type: PLAINTEXT
            Value: !Ref pDatalakeLibsLambdaLayerName
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
      QueuedTimeoutInMinutes: 60
      ServiceRole: !GetAtt rLambdaLayersCodeBuildServiceRole.Arn
      Source:
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.11
            build:
              commands:
                - ls && echo "-----> making artifactory directory"
                - |-
                    mkdir artifacts
                    zip -r artifacts/datalake_library.zip ./python -x \*__pycache__\*
                    aws s3api put-object --bucket "$ARTIFACTS_BUCKET" \
                     --key "layers/$DOMAIN_NAME/$ENVIRONMENT/$TEAM_NAME/$LAYER_NAME-$CODEBUILD_RESOLVED_SOURCE_VERSION.zip" \
                     --body artifacts/datalake_library.zip
                - |-
                    temp_role=$(aws sts assume-role --role-arn "arn:${AWS::Partition}:iam::$DOMAIN_ACCOUNT_ID:role/sdlf-cicd-domain-crossaccount-cfn-modules" --role-session-name "codebuild-lambda-layer")
                    AWS_ACCESS_KEY_ID=$(echo "$temp_role" | jq .Credentials.AccessKeyId | xargs)
                    AWS_SECRET_ACCESS_KEY=$(echo "$temp_role" | jq .Credentials.SecretAccessKey | xargs)
                    AWS_SESSION_TOKEN=$(echo "$temp_role" | jq .Credentials.SessionToken | xargs)
                    export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

                    STACK_NAME="sdlf-lambdalayers-$LAYER_NAME"
                    aws cloudformation deploy \
                        --stack-name "$STACK_NAME" \
                        --template-file "$CODEBUILD_SRC_DIR_SourceCicdArtifact"/template-lambda-layer.yaml \
                        --parameter-overrides \
                            pArtifactsBucket="$ARTIFACTS_BUCKET" \
                            pEnvironment="$ENVIRONMENT" \
                            pDomain="$DOMAIN_NAME" \
                            pTeamName="$TEAM_NAME" \
                            pLayers="$LAYER_NAME" \
                            pGitRef="$CODEBUILD_RESOLVED_SOURCE_VERSION" \
                        --tags Framework=sdlf \
                        --capabilities "CAPABILITY_NAMED_IAM" "CAPABILITY_AUTO_EXPAND" \
                        --role-arn "arn:${AWS::Partition}:iam::$DOMAIN_ACCOUNT_ID:role/sdlf-cicd-cfn-modules" || exit 1
                    echo "done for $DOMAIN_ACCOUNT_ID"
        Type: CODEPIPELINE
      TimeoutInMinutes: 20

  rBuildDeployDatalakeLibraryLayerSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeBuild/BuildDeployDatalakeLibraryLayer
      Type: String
      Value: !Ref rBuildDeployDatalakeLibraryLayer
      Description: Name of the CodeBuild job that packages the Datalake Libs into a Lambda Layer
  rBuildCloudFormationPackageSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/CodeBuild/BuildCloudFormationPackage
      Type: String
      Value: !Ref rCloudFormationPackageCodeBuildProject
      Description: CodeBuild job that packages a CloudFormation template

  rBuildLambdaLayerInfrastructure:
    Type: AWS::CloudFormation::Stack
    Condition: EnableLambdaLayerBuilder
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-lambda-layer.yaml

  rGlueJobDeployerInfrastructure:
    Type: AWS::CloudFormation::Stack
    Condition: EnableGlueJobDeployer
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-glue-job.yaml
