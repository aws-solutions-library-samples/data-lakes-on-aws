AWSTemplateFormatVersion: 2010-09-09
Description: CICD resources to handle deployment of a new domain

Parameters:
  pArtifactsBucket:
    Description: The artifacts bucket used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/DevOpsArtifactsBucket
  pKMSKey:
    Description: The KMS key used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/KMS/CICDKeyId
  pCicdRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/CicdCodeCommit
  pFoundationsRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/FoundationsCodeCommit
  pTeamRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/TeamCodeCommit
  pPipelineRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/PipelineCodeCommit
  pDatasetRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatasetCodeCommit
  pStageARepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageACodeCommit
  pStageBRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageBCodeCommit
  pDatalakeLibraryRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatalakeLibraryCodeCommit
  pPipLibraryRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/PipLibraryCodeCommit
  pUtilsRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/UtilsCodeCommit
  pBuildCloudformationModuleStage:
    Description: CodeBuild job that build a CloudFormation module from a SAM template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudformationModuleStage
  pBuildDeployDatalakeLibraryLayer:
    Description: CodeBuild job that packages the Datalake Libs into a Lambda Layer
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildDeployDatalakeLibraryLayer
  pBuildDeployRequirementsLayer:
    Description: CodeBuild job that creates a Lambda Layer containing the libraries and version numbers listed in the requirements.txt file in the repository provided
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildDeployRequirementsLayer
  pMainRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/MainCodeCommit
  pChildAccountId:
    Description: Child AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pDomain:
    Description: Name of the data domain (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,9}"
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
  pSdlfModuleDomain:
    Type: String
    Default: awslabs
    Description: "A placeholder domain used for default SDLF components"
  pSdlfModuleTeam:
    Type: String
    Default: sdlf
    Description: "A placeholder team used for default SDLF components"
  pDatalakeLibsLambdaLayerName:
    Description: Name to give the Lambda Layer containing the Datalake Library.
    Type: String
    Default: datalake-lib-layer
  pDefaultPipLibrariesLambdaLayerName:
    Description: Name to give the Lambda Layer containing the libraries installed through Pip.
    Type: String
    Default: default-pip-libraries
  pRunCodeCoverage:
    Description: "Creates code coverage reports from the unit tests included in `pDatalakeLibraryRepository`. Enforces the minimum threshold specified in `pMinTestCoverage`"
    Type: String
    AllowedValues: ["false", "true"]
    Default: "false"
  pBuildCloudFormationPackage:
    Description: CodeBuild job that packages a CloudFormation template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudFormationPackage

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: master

Conditions:
  RunUnitTestingStage: !Equals
    - !Ref pRunCodeCoverage
    - "true"
  NotRunUnitTestingStage: !Not
    - Condition: RunUnitTestingStage

Resources:
  rModulesCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                  - codecommit:GetRepository
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pCicdRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pTeamRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipelineRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatasetRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageARepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageBRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatalakeLibraryRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipLibraryRepository}
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pUtilsRepository}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !Ref pKMSKey
        - PolicyName: sdlf-cfn-mod-codepipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - lambda.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/glue/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/EMR*
              - Effect: Allow
                Action:
                  - iam:ListRoles
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action:
                  - iam:CreateRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/glue/sdlf-*
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/glue/sdlf-*
                Condition:
                  ArnEquals:
                    iam:PolicyARN:
                      - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf-*
              - Effect: Allow
                Action:
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListRolePolicies
                  - iam:PutRolePolicy
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                  - iam:TagRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/glue/sdlf-*
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                  - iam:ListPolicyVersions
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*
              - Effect: Allow
                Action:
                  - iam:CreatePolicy
                  - iam:CreatePolicyVersion
                  - iam:DeletePolicy
                  - iam:DeletePolicyVersion
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf-*
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/state-machine/sdlf-*
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-*
              - Effect: Allow
                Action:
                  - lambda:GetLayerVersion
                  - lambda:ListFunctions
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateAlias
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:DeleteFunctionConcurrency
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:ListTags
                  - lambda:PublishVersion
                  - lambda:PutFunctionConcurrency
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateAlias
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-*
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-foundations-rKibana*
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                  - lambda:GetEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/*
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:CreateProject
                  - codebuild:StartBuild
                  - codebuild:UpdateProject
                Resource:
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudformationModuleStage}"
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildDeployDatalakeLibraryLayer}"
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildDeployRequirementsLayer}"
              - Effect: Allow
                Action:
                  - states:CreateActivity
                  - states:CreateStateMachine
                  - states:ListActivities
                  - states:ListStateMachines
                  - states:TagResource
                Resource: !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:UpdateStateMachine
                Resource: !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:sdlf-*
              - Effect: Allow
                Action:
                  - states:DescribeActivity
                  - states:DeleteActivity
                  - states:GetActivityTask
                Resource: !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:activity:sdlf-*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DeleteLogStream
                  - logs:DeleteLogGroup
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                  - logs:TagLogGroup
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-*:log-stream:*
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sdlf-*:log-stream:*
              - Effect: Allow
                Action:
                  - cloudwatch:DeleteAlarms
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:PutMetricData
                  - cloudwatch:SetAlarmState
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:sdlf-*
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:ChangeMessageVisibility
                  - sqs:ChangeMessageVisibilityBatch
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:SetQueueAttributes
                  - sqs:TagQueue
                Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:DeleteBucketPolicy
                  - s3:GetEncryptionConfiguration
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBuckets
                  - s3:ListObjectsV2
                  - s3:PutBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutBucketPolicy
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                  - s3:PutObject
                  - s3:SetBucketEncryption
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:DescribeParameters
                  - ssm:GetOpsSummary
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                  - ssm:RemoveTagsFromResource
                Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
              - Effect: Allow
                Action:
                  - ssm:DeleteParameter
                  - ssm:PutParameter
                Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource:
                  - !Ref pKMSKey

  rModulesPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        -
          Name: Sources
          Actions:
            -
              Name: SourceFoundations
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceFoundationsArtifact
              Configuration:
                RepositoryName: !Ref pFoundationsRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
            -
              Name: SourceTeam
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceTeamArtifact
              Configuration:
                RepositoryName: !Ref pTeamRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
            -
              Name: SourcePipeline
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourcePipelineArtifact
              Configuration:
                RepositoryName: !Ref pPipelineRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 2
            -
              Name: SourceStageA
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceStageAArtifact
              Configuration:
                RepositoryName: !Ref pStageARepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 2
            -
              Name: SourceStageB
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceStageBArtifact
              Configuration:
                RepositoryName: !Ref pStageBRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 2
            -
              Name: SourceDataset
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceDatasetArtifact
              Configuration:
                RepositoryName: !Ref pDatasetRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 2
        -
          Name: BuildFoundationsTeam
          Actions:
            -
              Name: BuildFoundations
              InputArtifacts:
              - Name: SourceFoundationsArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"foundations", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildTeam
              InputArtifacts:
              - Name: SourceTeamArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"team", "type":"PLAINTEXT"}]
              RunOrder: 1
        -
          Name: BuildPipelineStages
          Actions:
            -
              Name: BuildPipeline
              InputArtifacts:
              - Name: SourcePipelineArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"pipeline", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStageA
              InputArtifacts:
              - Name: SourceStageAArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageA", "type":"PLAINTEXT"}]
              RunOrder: 2
            -
              Name: BuildStageB
              InputArtifacts:
              - Name: SourceStageBArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageB", "type":"PLAINTEXT"}]
              RunOrder: 2
        -
          Name: BuildDataset
          Actions:
            -
              Name: BuildDataset
              InputArtifacts:
              - Name: SourceDatasetArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"dataset", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  rModulesTriggerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Run Modules repository update"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pTeamRepository}
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipelineRepository}
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageARepository}
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageBRepository}
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatasetRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - dev
            - test
            - master
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rModulesPipeline}
          Id: !Sub sdlf-${pDatasetRepository}-trigger
          RoleArn: !GetAtt rEventsRepositoryTriggerRole.Arn

  ######## LAMBDA LAYERS ########
  rCommonPipLibs:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: rDatalakePipelineTriggerRule
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pPipLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployRequirementsLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  rDatalakePipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger team Data Lake Library pipeline"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatalakeLibraryRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn:
            !If [
              NotRunUnitTestingStage,
              !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonDatalakeLibs}",
              !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonDatalakeTestLibs}",
            ]
          Id: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-trigger
          RoleArn: !GetAtt rEventsRepositoryTriggerRole.Arn

  # rDatalakePipelineFailedRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Name: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-failure
  #     Description: "Notify team of Data Lake Library pipeline failure"
  #     EventPattern:
  #       source:
  #         - aws.codepipeline
  #       detail-type:
  #         - CodePipeline Pipeline Execution State Change
  #       detail:
  #         state:
  #           - FAILED
  #         pipeline:
  #           - !If [
  #               NotRunUnitTestingStage,
  #               !Ref rCommonDatalakeLibs,
  #               !Ref rCommonDatalakeTestLibs,
  #             ]
  #     State: ENABLED
  #     Targets:
  #       - Arn: !Ref rSNSTopic
  #         Id: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-failure
  #         InputTransformer:
  #           InputTemplate:
  #             !If [
  #               NotRunUnitTestingStage,
  #               !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonDatalakeLibs}"',
  #               !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonDatalakeTestLibs}"',
  #             ]
  #           InputPathsMap:
  #             pipeline: $.detail.pipeline

  rPipPipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger team Pip Library pipeline"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipLibraryRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonPipLibs}
          Id: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-trigger
          RoleArn: !GetAtt rEventsRepositoryTriggerRole.Arn

  # rPipPipelineFailedRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Name: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-failure
  #     Description: "Notify admin team of Pip Library pipeline failure"
  #     EventPattern:
  #       source:
  #         - aws.codepipeline
  #       detail-type:
  #         - CodePipeline Pipeline Execution State Change
  #       detail:
  #         state:
  #           - FAILED
  #         pipeline:
  #           - !Ref rCommonPipLibs
  #     State: ENABLED
  #     Targets:
  #       - Arn: !Ref rSNSTopic
  #         Id: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-failure
  #         InputTransformer:
  #           InputTemplate: !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonPipLibs}"'
  #           InputPathsMap:
  #             pipeline: $.detail.pipeline

  ######## LAMBDA LAYER PIPELINE #########
  rCommonDatalakeLibs:
    Type: AWS::CodePipeline::Pipeline
    Condition: NotRunUnitTestingStage
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pDatalakeLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployDatalakeLibraryLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  rCommonDatalakeTestLibs:
    Type: AWS::CodePipeline::Pipeline
    Condition: RunUnitTestingStage
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pDatalakeLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Test
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: "{{resolve:ssm:/SDLF/CodeBuild/TeamUnitTestCodeBuildProject}}"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployDatalakeLibraryLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  ######## CODEPIPELINE #########
  rDomainCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-maincodepipelinesource
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                  - codecommit:GetRepository
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pMainRepository}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !Ref pKMSKey
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudFormationPackage}"
        - PolicyName: sdlf-cicd-cloudformation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain-crossaccount-pipeline

  rDomainCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rDomainCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: cicd-main
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: TemplateSource
              Configuration:
                RepositoryName: !Ref pMainRepository
                BranchName:
                  !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: BuildTemplate
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: TemplatePackage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudFormationPackage
                EnvironmentVariables: !Sub >-
                  [{"name":"TEMPLATE", "value":"foundations-${pDomain}-${pEnvironment}.yaml", "type":"PLAINTEXT"}]
              RunOrder: 1
        - Name: DeployFoundationsAndTeamsInfrastructure
          Actions:
            - Name: CreateStack
              RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain-crossaccount-pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
                - Name: TemplatePackage
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain
                StackName: !Sub sdlf-domain-${pDomain}-${pEnvironment}
                TemplatePath: "TemplatePackage::packaged-template.yaml"
                TemplateConfiguration: "TemplateSource::tags.json"
                ParameterOverrides: |
                  {
                    "pPipelineReference" : "#{codepipeline.PipelineExecutionId}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref pArtifactsBucket
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS

  rMainCodeCommitTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-trigger-rule
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rDomainCodePipeline}

  rMainCodeCommitTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      State: ENABLED
      EventPattern:
        source:
          - custom.aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pMainRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rDomainCodePipeline}
          RoleArn: !GetAtt rMainCodeCommitTriggerRole.Arn
          Id: sdlf-cicd-domain

  rEventsRepositoryTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-events-trigger
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rModulesPipeline}
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:sdlf-stage-*

  rChildAccountIdSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/Misc/Domains/${pDomain}/${pEnvironment}/AccountId
      Type: String
      Value: !Ref pChildAccountId
      Description: !Sub ${pDomain} ${pEnvironment} environment Child Account Id

  rDatalakeLibraryLayerSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/Lambda/LatestDatalakeLibraryLayer
      Type: String
      Value: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:${pDatalakeLibsLambdaLayerName}:1
      Description: The ARN of the latest version of the Datalake Library layer
  rPipLibrariesLayerSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/Lambda/LatestDefaultPipLibraryLayer
      Type: String
      Value: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:${pDefaultPipLibrariesLambdaLayerName}:1
      Description: The ARN of the latest version of the Lambda Layer containing the Pip libraries
