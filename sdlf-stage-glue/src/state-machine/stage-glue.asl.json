{
  "Comment": "Simple Glue-based transform",
  "StartAt": "Pass",
  "States": {
    "Pass": {
      "Type": "Pass",
      "Next": "Records",
      "Parameters": {
        "Items.$": "States.StringToJson($)"
      }
    },
    "Records": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "STANDARD"
        },
        "StartAt": "Execute Glue Transformation",
        "States": {
          "Execute Glue Transformation": {
            "Type": "Task",
            "Resource": "arn:aws:states:::glue:startJobRun.sync",
            "ResultPath": "$.run_output",
            "Parameters": {
              "JobName": "${lTransform}",
              "WorkerType": "${lWorkerType}",
              "NumberOfWorkers": ${lNumberOfWorkers},
              "Arguments": ${lGlueArguments}
            },
            "End": true,
            "Catch": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "Next": "Send to SQS DLQ"
              }
            ]
          },
          "Send to SQS DLQ": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sqs:sendMessage",
            "Parameters": {
              "QueueUrl": "${lDlqUrl}",
              "MessageBody.$": "$$.Execution.Input",
              "MessageGroupId": "${lDeploymentInstance}",
              "MessageAttributes": {
                "SfnExecutionId": {
                  "DataType": "String",
                  "StringValue.$": "$$.Execution.Id"
                }
              }
            },
            "ResultSelector": {},
            "End": true
          }
        }
      },
      "Label": "Records",
      "MaxConcurrency": 50,
      "ToleratedFailurePercentage": 100,
      "ItemBatcher": {
        "MaxItemsPerBatch": ${lMaxItemsPerBatch}
      },
      "InputPath": "$.Items",
      "Next": "Post-map Status"
    },
    "Post-map Status": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "ResultPath": null,
      "Parameters": {
        "Payload": {
          "peh_id.$": "$$.Execution.Name",
          "map_output.$": "$"
        },
        "FunctionName": "${lPostMetadata}:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Run Glue Crawler",
      "Catch": [
        {
          "ErrorEquals": [
            "MapPartialFailureException"
          ],
          "Next": "Success"
        }
      ]
    },
    "Run Glue Crawler": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "ResultPath": null,
      "Parameters": {
        "Name": "${lCrawlerName}"
      },
      "Next": "Wait X Seconds"
    },
    "Wait X Seconds": {
      "Type": "Wait",
      "Seconds": ${lWaitTime},
      "Next": "GetCrawler"
    },
    "GetCrawler": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:glue:getCrawler",
      "ResultPath": "$[0].run_output.crawler_response",
      "Parameters": {
        "Name": "${lCrawlerName}"
      },
      "Next": "Crawler Complete?"
    },
    "Crawler Complete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$[0].run_output.crawler_response.Crawler.State",
          "StringEquals": "READY",
          "Next": "Success"
        }
      ],
      "Default": "Wait X Seconds"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
